syntax = "proto3";

package vision;

// Yüz tanıma servisi - sadece yüz tespiti ve izleme yapar
service VisionService {
    rpc AnalyzeFrame(FrameRequest) returns (VisionResponse);
}

// Duygu analiz servisi - tespit edilen yüzlerin duygularını analiz eder
service EmotionService {
    rpc AnalyzeEmotion(FaceRequest) returns (EmotionResponse);
}

// Konuşma tespit servisi - kişinin konuşup konuşmadığını belirler
service SpeechDetectionService {
    rpc DetectSpeech(FaceRequest) returns (SpeechResponse);
}

// Tek bir görüntü karesi gönderme isteği
message FrameRequest {
    bytes image = 1;
}

// Yüz verisi gönderme isteği
message FaceRequest {
    bytes face_image = 1;        // Yüz bölgesi görüntüsü
    int32 face_id = 2;           // Yüzün kimlik numarası
    repeated float landmarks = 3; // Yüzdeki önemli noktaların koordinatları
}

// Vision servisinden gelen yanıt - tespit edilen yüzleri içerir
message VisionResponse {
    repeated DetectedFace faces = 1;
    bool person_detected = 2;    // Kare içinde kişi tespit edildi mi
}

// Tespit edilen yüz bilgileri
message DetectedFace {
    int32 id = 1;                // Yüze ait kimlik numarası
    bytes face_image = 2;        // Kişinin yüz görüntüsü (JPEG formatında)
    repeated float landmarks = 3; // Yüzdeki önemli noktaların koordinatları
    int32 x = 4;                 // Yüz koordinatları
    int32 y = 5;
    int32 width = 6;
    int32 height = 7;
}

// Duygu analizi yanıtı
message EmotionResponse {
    string emotion = 1;          // Tespit edilen duygu (happy, sad, angry, vb.)
    float confidence = 2;        // Güven skoru (0-1)
    int32 face_id = 3;           // Yüzün kimlik numarası
}

// Konuşma tespiti yanıtı
message SpeechResponse {
    bool is_speaking = 1;        // Kişi konuşuyor mu
    float speaking_time = 2;     // Konuşma süresi (sn)
    int32 face_id = 3;           // Yüzün kimlik numarası
}

// Kombine servis yanıtı (gateway için)
message CombinedResponse {
    repeated Speaker speakers = 1;
}

// Kombine konuşmacı bilgisi
message Speaker {
    int32 id = 1;
    float speaking_time = 2;
    bool is_speaking = 3;
    string emotion = 4;          // Kişinin duygu durumu
    float emotion_confidence = 5; // Duygu analizi güven skoru (0-1)
    bytes face_image = 6;        // Kişinin yüz görüntüsü (JPEG formatında)
}
